server:
  port: ${APPLICATION_PORT:8080}

spring:
  application:
    name: Better-Iter Application

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  ## Database
  datasource:
    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT}/${DATABASE_NAME:iter}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: root
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  ## JPA
  jpa:
    hibernate:
      ddl-auto: create

    properties:
      hibernate:
        show_sql: true
        default_batch_fetch_size: 100

  ## Oauth
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope:
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  ### REDIS
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    username: ${REDIS_USERNAME:root}
    password: ${REDIS_PASSWORD}

### JWT
jwt:
  bearer: ${JWT_BEARER:Bearer}
  secret: ${JWT_SECRET_KEY}
  access-expiration: ${JWT_ACCESS_EXPIRE:3600000} # 1시간
  access-header: ${JWT_ACCESS_HEADER:Authorization} # Access Token 헤더
  refresh-expiration: ${JWT_REFRESH_EXPIRE:86400000} # 1일
  refresh-header: ${JWT_REFRESH_HEADER:Refresh-Authorization} # Refresh Token 헤더



logging:
  level:
    org.hibernate.sql: debug
    org.hibernate.type: trace